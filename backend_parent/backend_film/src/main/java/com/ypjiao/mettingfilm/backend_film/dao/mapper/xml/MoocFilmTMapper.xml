<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ypjiao.mettingfilm.backend_film.dao.mapper.MoocFilmTMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.ypjiao.mettingfilm.backend_film.dao.entity.MoocFilmT">
        <id column="UUID" property="uuid" />
        <result column="film_name" property="filmName" />
        <result column="film_type" property="filmType" />
        <result column="img_address" property="imgAddress" />
        <result column="film_score" property="filmScore" />
        <result column="film_preSaleNum" property="filmPresalenum" />
        <result column="film_box_office" property="filmBoxOffice" />
        <result column="film_source" property="filmSource" />
        <result column="film_cats" property="filmCats" />
        <result column="film_area" property="filmArea" />
        <result column="film_date" property="filmDate" />
        <result column="film_time" property="filmTime" />
        <result column="film_status" property="filmStatus" />
    </resultMap>

    <select id="describeFilms"
            resultType="com.ypjiao.mettingfilm.backend_film.controller.vo.DescribeFilmsRespVo">
            select film.UUID            as filmId,
                   film.film_status     as filmStatus,
                   film.film_name       as filmName,
                   info.film_en_name    as filmEnName,
                   film.film_score      as filmScore,
                   film.film_preSaleNum as preSaleNum,
                   film.film_box_office as boxOffice,
                   film.film_time       as filmTime,
                   info.film_length     as filmLength,
                   info.film_imgs       as mainImg
            from mooc_film_t film
                     left join mooc_film_info_t info on film.UUID = info.film_id;
    </select>

    <select id="describeFilmById" resultType="com.ypjiao.mettingfilm.apis.film.vo.DescribeFilmRespVo">
        select
       film.`UUID` AS filmId,
       film.film_name                 as filmName,
               info.film_length               as filmLength,
                film.UUID,
               (select GROUP_CONCAT(distinct cat.show_name separator ',')
                from mooc_cat_dict_t cat
                where FIND_IN_SET(cat.UUID,
                                  (select REPLACE(TRIM(BOTH '#' FROM f.film_cats), '#', ',')
                                   from mooc_film_t f
                                   where f.UUID = film.UUID)))
                                              as filmCats,
               (select GROUP_CONCAT(distinct a.actor_name separator ',')
                from mooc_film_actor_t fa
                         left join mooc_actor_t a on fa.actor_id = a.UUID
                where fa.film_id = film.UUID) as actors,
               film.img_address               as imgAddress,
               info.film_imgs                 as subAddress
        from mooc_film_t film
                 left join mooc_film_info_t info on film.UUID = info.film_id
        where film.UUID = #{film_Id};
    </select>
</mapper>
